{"meta": {"format": 2, "version": "7.5.3", "timestamp": "2024-10-30T20:16:34.335590", "branch_coverage": false, "show_contexts": false}, "files": {"AlgoTree/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 9, "num_statements": 9, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "AlgoTree/flat_forest.py": {"executed_lines": [1, 2, 4, 7, 8, 31, 32, 37, 38, 45, 46, 73, 74, 87, 116, 117, 119, 128, 131, 132, 133, 134, 136, 145, 152, 154, 162, 165, 167, 177, 182, 185, 186, 188, 189, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 226, 227, 230, 232, 248, 256, 257, 259, 262, 263, 264, 266, 267, 275, 276, 283, 284, 286, 290, 291, 292, 293, 295, 296, 298, 299, 306, 308, 311, 318, 319, 327, 337, 338, 345, 346, 354, 355, 363, 365, 368, 370, 371, 381, 389, 391, 400, 401, 407, 409, 410, 419, 420, 429, 430, 439, 440, 450, 457, 459, 462, 481, 483, 484, 486, 489, 491, 501, 510], "summary": {"covered_lines": 117, "num_statements": 159, "percent_covered": 73.58490566037736, "percent_covered_display": "74", "missing_lines": 42, "excluded_lines": 0}, "missing_lines": [5, 57, 81, 82, 83, 84, 85, 143, 163, 178, 183, 224, 237, 239, 240, 241, 243, 244, 245, 246, 260, 273, 309, 312, 325, 335, 343, 352, 364, 366, 379, 397, 398, 416, 427, 437, 447, 448, 487, 499, 508, 511], "excluded_lines": []}, "AlgoTree/flat_forest_node.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 10, 26, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 71, 72, 73, 74, 75, 76, 77, 79, 105, 106, 108, 110, 112, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 130, 131, 137, 139, 140, 159, 160, 166, 170, 171, 177, 178, 182, 185, 189, 190, 196, 199, 204, 206, 207, 213, 215, 216, 217, 218, 220, 221, 226, 228, 229, 232, 234, 235, 238, 240, 241, 243, 245, 247, 253, 255, 256, 262, 263, 265, 266, 267, 269, 270, 276, 279, 283, 286, 287, 289, 290, 292, 293, 295, 302, 304, 305, 311, 318, 319, 325, 326, 327, 329, 332, 335, 336, 338, 348, 350, 357, 359, 368, 369, 371, 373, 385, 392, 394, 403, 410, 411], "summary": {"covered_lines": 135, "num_statements": 172, "percent_covered": 78.48837209302326, "percent_covered_display": "78", "missing_lines": 37, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 22, 23, 24, 42, 113, 114, 115, 147, 148, 150, 151, 153, 154, 155, 156, 157, 197, 200, 201, 202, 222, 230, 236, 242, 244, 277, 280, 284, 330, 333, 382, 383, 400, 401], "excluded_lines": []}, "AlgoTree/node_hasher.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 17, 26, 27, 40, 42, 44, 45, 58, 60, 62, 63, 77, 80, 82, 83, 96, 98], "summary": {"covered_lines": 22, "num_statements": 28, "percent_covered": 78.57142857142857, "percent_covered_display": "79", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [15, 24, 41, 59, 78, 97], "excluded_lines": []}, "AlgoTree/pretty_tree.py": {"executed_lines": [1, 5, 6, 10, 20, 39, 40, 43, 44, 45, 46, 48, 49, 56, 58, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 111, 114, 121], "summary": {"covered_lines": 49, "num_statements": 54, "percent_covered": 90.74074074074075, "percent_covered_display": "91", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [41, 94, 95, 96, 97], "excluded_lines": []}, "AlgoTree/tree_converter.py": {"executed_lines": [1, 2, 3, 5, 6, 10, 11, 18, 20, 21, 30, 33, 34, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 79, 81, 82, 97, 100, 105, 106, 110, 112, 113, 126, 127, 133], "summary": {"covered_lines": 43, "num_statements": 46, "percent_covered": 93.47826086956522, "percent_covered_display": "93", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [55, 73, 98], "excluded_lines": []}, "AlgoTree/tree_hasher.py": {"executed_lines": [2, 3, 5, 6, 10, 16, 18, 25, 27, 28, 35, 38, 40, 41, 43, 46, 47, 48, 50], "summary": {"covered_lines": 18, "num_statements": 20, "percent_covered": 90.0, "percent_covered_display": "90", "missing_lines": 2, "excluded_lines": 0}, "missing_lines": [36, 44], "excluded_lines": []}, "AlgoTree/treenode.py": {"executed_lines": [1, 2, 3, 5, 6, 13, 14, 36, 42, 43, 46, 47, 48, 50, 52, 72, 73, 74, 76, 78, 79, 80, 82, 83, 84, 85, 87, 90, 91, 97, 99, 100, 106, 110, 111, 114, 117, 118, 120, 121, 127, 128, 129, 130, 132, 144, 160, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 186, 187, 189, 190, 191, 193, 195, 202, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 235, 241, 242, 243, 244, 245, 246, 248, 250, 257, 260, 262, 268, 270, 277], "summary": {"covered_lines": 93, "num_statements": 127, "percent_covered": 73.22834645669292, "percent_covered_display": "73", "missing_lines": 34, "excluded_lines": 0}, "missing_lines": [22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 77, 107, 138, 139, 140, 141, 142, 155, 156, 157, 158, 181, 183, 188, 224, 225, 226, 227, 228, 229, 230, 231, 233, 258], "excluded_lines": []}, "AlgoTree/treenode_api.py": {"executed_lines": [1, 3, 4, 145, 147, 148, 159, 160, 167, 168], "summary": {"covered_lines": 9, "num_statements": 25, "percent_covered": 36.0, "percent_covered_display": "36", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 169, 170, 171, 172, 173], "excluded_lines": []}, "AlgoTree/utils.py": {"executed_lines": [1, 2, 3, 5, 37, 40, 43, 46, 49, 50, 52, 53, 54, 55, 58, 59, 60, 62, 63, 64, 67, 69, 101, 104, 107, 110, 113, 114, 116, 117, 119, 120, 123, 124, 126, 129, 136, 139, 140, 141, 144, 151, 154, 156, 157, 158, 160, 168, 171, 172, 177, 180, 188, 191, 192, 194, 197, 204, 207, 210, 217, 220, 227, 230, 238, 241, 244, 280, 283, 286, 289, 290, 291, 292, 295, 296, 297, 299, 300, 301, 303, 330, 338, 339, 345, 348, 370, 371, 373, 374, 375, 377, 379, 380, 383, 396, 402, 424, 425, 426, 427, 429, 430, 432, 433, 435, 462, 477, 478, 480, 481, 482, 484, 485, 487, 494, 495, 497, 504, 506, 533, 549, 576, 603, 619, 659, 718], "summary": {"covered_lines": 127, "num_statements": 261, "percent_covered": 48.65900383141762, "percent_covered_display": "49", "missing_lines": 134, "excluded_lines": 0}, "missing_lines": [38, 41, 44, 47, 56, 65, 102, 105, 108, 111, 137, 152, 155, 169, 189, 205, 239, 281, 284, 287, 293, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 443, 444, 446, 447, 448, 450, 451, 452, 454, 456, 457, 458, 459, 515, 516, 518, 519, 521, 522, 523, 524, 526, 527, 528, 529, 531, 541, 542, 544, 545, 546, 547, 559, 560, 561, 562, 563, 565, 567, 568, 569, 570, 571, 573, 587, 588, 589, 590, 591, 593, 594, 596, 597, 598, 599, 601, 611, 612, 613, 614, 615, 616, 617, 633, 634, 635, 637, 695, 696, 697, 698, 699, 700, 701, 702, 703, 704, 705, 706, 707, 708, 709, 710, 712, 713, 714, 715, 716, 736, 737, 739, 740, 741, 742, 743, 744], "excluded_lines": []}, "test/test_algos.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 48, 54, 55, 57, 58, 60, 62, 63, 64, 65, 66, 67, 70], "summary": {"covered_lines": 28, "num_statements": 29, "percent_covered": 96.55172413793103, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [71], "excluded_lines": []}, "test/test_algos_treenode.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 48, 54, 55, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70], "summary": {"covered_lines": 28, "num_statements": 29, "percent_covered": 96.55172413793103, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [71], "excluded_lines": []}, "test/test_flat_forest.py": {"executed_lines": [1, 3, 5, 6, 7, 15, 17, 18, 19, 20, 22, 23, 24, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 55, 58, 59, 60, 63, 64, 65, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 88], "summary": {"covered_lines": 51, "num_statements": 52, "percent_covered": 98.07692307692308, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [89], "excluded_lines": []}, "test/test_flat_forest_additional.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 16, 18, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 36, 38, 39, 42, 44, 46, 47, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 76, 77, 80], "summary": {"covered_lines": 49, "num_statements": 50, "percent_covered": 98.0, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [81], "excluded_lines": []}, "test/test_flat_forest_nb.py": {"executed_lines": [1, 3, 4, 7, 8, 21, 35, 37, 39, 45, 46, 49, 52, 54, 55, 56, 64, 66, 67, 68, 71, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 109, 110, 123, 137, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191], "summary": {"covered_lines": 93, "num_statements": 94, "percent_covered": 98.93617021276596, "percent_covered_display": "99", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [192], "excluded_lines": []}, "test/test_flat_forest_node.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72], "summary": {"covered_lines": 50, "num_statements": 51, "percent_covered": 98.03921568627452, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [73], "excluded_lines": []}, "test/test_flat_forest_node_api.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 10, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 44, 48, 50, 51, 52, 53, 56, 57, 58, 61, 64, 65, 66, 67, 69, 71, 74, 75, 77, 78, 80, 81, 83, 85, 86, 87, 90, 91, 94], "summary": {"covered_lines": 59, "num_statements": 60, "percent_covered": 98.33333333333333, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [95], "excluded_lines": []}, "test/test_flat_forest_node_eq.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 63, 75, 76, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "summary": {"covered_lines": 19, "num_statements": 19, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/test_flat_forest_node_hash.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 15, 18, 19, 20, 23, 26, 27, 28, 31, 33, 34, 36, 38, 41, 43, 44, 47, 49, 51, 54, 56, 58, 60, 62, 69], "summary": {"covered_lines": 36, "num_statements": 37, "percent_covered": 97.29729729729729, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [70], "excluded_lines": []}, "test/test_flat_forest_node_utils.py": {"executed_lines": [1, 3, 4, 5, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 58, 59, 60, 61, 77, 78, 79, 85, 101, 102, 103, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 129, 130, 131, 133, 134, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 160, 161, 163, 164, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 210, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249], "summary": {"covered_lines": 114, "num_statements": 115, "percent_covered": 99.1304347826087, "percent_covered_display": "99", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [250], "excluded_lines": []}, "test/test_misc.py": {"executed_lines": [1, 2, 3, 5, 6, 8, 11, 12, 22, 23, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 61, 63, 64, 65, 68, 69, 72, 73, 74, 77], "summary": {"covered_lines": 41, "num_statements": 42, "percent_covered": 97.61904761904762, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [78], "excluded_lines": []}, "test/test_node_hash.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 42, 45, 46, 47, 50, 53, 54, 55, 58, 60, 61, 63, 65, 68, 70, 71, 74, 76, 78, 81, 83, 85, 87, 89, 90, 91, 93], "summary": {"covered_lines": 47, "num_statements": 48, "percent_covered": 97.91666666666667, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [94], "excluded_lines": []}, "test/test_tree_converter.py": {"executed_lines": [1, 3, 5, 6, 7, 10, 11, 32, 33, 36, 39, 43, 46, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 120, 132, 134, 136, 138, 139, 140, 141, 142, 143, 145, 147, 150, 151, 152, 154, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215], "summary": {"covered_lines": 111, "num_statements": 139, "percent_covered": 79.85611510791367, "percent_covered_display": "80", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 216], "excluded_lines": []}, "test/test_tree_hasher.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 45, 48, 50, 52, 54, 55, 57, 59, 61, 64, 66, 68, 71, 72, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95], "summary": {"covered_lines": 61, "num_statements": 62, "percent_covered": 98.38709677419355, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [96], "excluded_lines": []}, "test/test_tree_print.py": {"executed_lines": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 22, 24, 34, 35, 36, 37, 45, 47, 48, 49, 50, 58, 60], "summary": {"covered_lines": 26, "num_statements": 31, "percent_covered": 83.87096774193549, "percent_covered_display": "84", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 20, 61], "excluded_lines": []}, "test/test_tree_with_flat_forest_node.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 23, 35, 37, 38, 39, 40, 52, 54, 55, 56, 57, 69, 71, 72, 73, 74, 75, 82, 84], "summary": {"covered_lines": 25, "num_statements": 26, "percent_covered": 96.15384615384616, "percent_covered_display": "96", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [85], "excluded_lines": []}, "test/test_treenode.py": {"executed_lines": [1, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 43], "summary": {"covered_lines": 36, "num_statements": 37, "percent_covered": 97.29729729729729, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [44], "excluded_lines": []}, "test/test_treenode_utils.py": {"executed_lines": [1, 3, 4, 21, 22, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 76, 77, 78, 84, 100, 101, 102, 107, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 127, 128, 130, 131, 132, 133, 134, 136, 139, 140, 145, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 193, 209, 210, 211, 216, 217, 218, 220, 221, 222, 225], "summary": {"covered_lines": 90, "num_statements": 91, "percent_covered": 98.9010989010989, "percent_covered_display": "99", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [226], "excluded_lines": []}}, "totals": {"covered_lines": 1586, "num_statements": 1913, "percent_covered": 82.9064296915839, "percent_covered_display": "83", "missing_lines": 327, "excluded_lines": 0}}