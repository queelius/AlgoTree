{"meta": {"format": 2, "version": "7.5.3", "timestamp": "2024-08-25T00:36:23.127484", "branch_coverage": false, "show_contexts": false}, "files": {"AlgoTree/__init__.py": {"executed_lines": [1, 2, 3, 4, 5, 6, 7, 8, 9], "summary": {"covered_lines": 9, "num_statements": 9, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "AlgoTree/flat_forest.py": {"executed_lines": [1, 2, 4, 7, 8, 31, 32, 37, 38, 45, 46, 88, 132, 133, 135, 144, 150, 159, 166, 176, 179, 181, 188, 203, 220, 221, 223, 224, 225, 227, 228, 229, 231, 234, 236, 237, 240, 241, 242, 244, 246, 262, 266, 271, 273, 275, 281, 289, 290, 297, 298, 304, 305, 306, 307, 309, 310, 312, 313, 318, 325, 326, 333, 341, 351, 358, 359, 367, 369, 370, 385, 389, 394, 403, 404, 408, 418, 428, 440, 452, 481, 488, 489, 491, 506], "summary": {"covered_lines": 47, "num_statements": 153, "percent_covered": 30.718954248366014, "percent_covered_display": "31", "missing_lines": 106, "excluded_lines": 0}, "missing_lines": [5, 57, 73, 74, 81, 82, 83, 84, 85, 87, 116, 117, 119, 128, 129, 130, 131, 134, 141, 143, 152, 160, 161, 163, 165, 175, 180, 183, 184, 186, 187, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 222, 230, 235, 238, 239, 243, 254, 255, 257, 258, 260, 261, 264, 265, 274, 282, 284, 288, 291, 293, 294, 296, 316, 317, 323, 335, 340, 342, 343, 352, 353, 354, 356, 376, 378, 384, 387, 388, 396, 397, 406, 407, 414, 416, 417, 424, 426, 427, 436, 437, 439, 446, 448, 451, 470, 472, 473, 475, 476, 478, 480, 490, 497], "excluded_lines": []}, "AlgoTree/flat_forest_node.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 10, 26, 36, 37, 38, 39, 41, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 71, 72, 73, 74, 75, 76, 77, 79, 105, 106, 108, 110, 112, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 130, 131, 137, 139, 140, 146, 150, 151, 157, 158, 162, 165, 169, 170, 176, 179, 184, 186, 187, 193, 195, 196, 197, 198, 200, 201, 206, 208, 209, 212, 214, 215, 218, 220, 221, 223, 225, 227, 233, 235, 236, 242, 243, 245, 246, 247, 249, 250, 256, 259, 263, 266, 267, 269, 270, 272, 273, 275, 282, 309, 310, 316, 323, 324, 330, 331, 332, 334, 337, 340, 341, 343, 354, 355, 357, 359, 366, 368, 377, 378, 380, 382, 394, 401, 403], "summary": {"covered_lines": 132, "num_statements": 160, "percent_covered": 82.5, "percent_covered_display": "82", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [19, 20, 21, 22, 23, 24, 42, 113, 114, 115, 177, 180, 181, 182, 202, 210, 216, 222, 224, 257, 260, 264, 335, 338, 391, 392, 409, 410], "excluded_lines": []}, "AlgoTree/node_hasher.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 17, 26, 27, 40, 42, 44, 45, 58, 60, 62, 63, 77, 80, 82, 83, 96, 98], "summary": {"covered_lines": 22, "num_statements": 28, "percent_covered": 78.57142857142857, "percent_covered_display": "79", "missing_lines": 6, "excluded_lines": 0}, "missing_lines": [15, 24, 41, 59, 78, 97], "excluded_lines": []}, "AlgoTree/pretty_tree.py": {"executed_lines": [1, 5, 6, 10, 20, 39, 40, 43, 44, 45, 46, 48, 49, 56, 58, 67, 68, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 88, 89, 90, 92, 93, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 111, 114, 121], "summary": {"covered_lines": 49, "num_statements": 54, "percent_covered": 90.74074074074075, "percent_covered_display": "91", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [41, 94, 95, 96, 97], "excluded_lines": []}, "AlgoTree/tree_converter.py": {"executed_lines": [1, 2, 3, 5, 6, 10, 11, 18, 20, 21, 30, 33, 34, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 75, 76, 77, 79, 81, 82, 97, 100, 105, 106, 110, 112, 113, 126, 127, 133], "summary": {"covered_lines": 43, "num_statements": 46, "percent_covered": 93.47826086956522, "percent_covered_display": "93", "missing_lines": 3, "excluded_lines": 0}, "missing_lines": [55, 73, 98], "excluded_lines": []}, "AlgoTree/tree_hasher.py": {"executed_lines": [2, 3, 4, 6, 11, 17, 19, 26, 28, 29, 36, 39, 41, 42, 44, 47, 48, 49, 51], "summary": {"covered_lines": 8, "num_statements": 20, "percent_covered": 40.0, "percent_covered_display": "40", "missing_lines": 12, "excluded_lines": 0}, "missing_lines": [5, 10, 16, 18, 25, 27, 35, 38, 40, 43, 46, 50], "excluded_lines": []}, "AlgoTree/treenode.py": {"executed_lines": [1, 2, 3, 4, 6, 14, 15, 37, 43, 46, 47, 48, 49, 51, 52, 73, 74, 75, 77, 79, 80, 81, 83, 84, 85, 86, 88, 91, 92, 98, 100, 101, 107, 111, 112, 115, 118, 119, 121, 122, 128, 129, 130, 131, 133, 145, 161, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 185, 187, 188, 190, 191, 192, 194, 195, 198, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 236, 242, 243, 244, 245, 246, 247, 249, 251, 258], "summary": {"covered_lines": 55, "num_statements": 121, "percent_covered": 45.45454545454545, "percent_covered_display": "45", "missing_lines": 66, "excluded_lines": 0}, "missing_lines": [5, 13, 22, 23, 25, 26, 27, 28, 29, 31, 32, 34, 36, 42, 50, 72, 76, 78, 82, 87, 90, 97, 99, 106, 110, 114, 117, 120, 127, 132, 138, 139, 140, 141, 142, 144, 155, 156, 157, 158, 160, 170, 179, 182, 184, 186, 189, 193, 202, 204, 207, 216, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 241, 248, 250, 257], "excluded_lines": []}, "AlgoTree/treenode_api.py": {"executed_lines": [1, 3, 4, 145, 147, 148, 159, 160, 167, 168], "summary": {"covered_lines": 9, "num_statements": 25, "percent_covered": 36.0, "percent_covered_display": "36", "missing_lines": 16, "excluded_lines": 0}, "missing_lines": [150, 151, 153, 154, 155, 156, 157, 162, 163, 164, 165, 169, 170, 171, 172, 173], "excluded_lines": []}, "AlgoTree/utils.py": {"executed_lines": [1, 2, 3, 5, 37, 40, 43, 46, 47, 49, 50, 51, 52, 55, 56, 57, 59, 60, 61, 64, 66, 98, 101, 104, 107, 108, 110, 111, 113, 114, 117, 118, 120, 123, 130, 131, 132, 135, 142, 144, 145, 146, 148, 155, 156, 161, 164, 172, 173, 175, 178, 185, 188, 195, 198, 205, 208, 215, 219, 255, 258, 261, 262, 263, 264, 267, 268, 269, 271, 272, 273, 275, 298, 306, 307, 313, 316, 338, 339, 341, 342, 343, 345, 347, 348, 351, 364, 370, 392, 393, 394, 395, 397, 398, 400, 401, 403, 412, 427, 428, 430, 431, 432, 434, 435, 438, 445, 446, 448, 455, 457, 475, 485, 512, 540, 581, 640], "summary": {"covered_lines": 116, "num_statements": 206, "percent_covered": 56.310679611650485, "percent_covered_display": "56", "missing_lines": 90, "excluded_lines": 0}, "missing_lines": [38, 41, 44, 53, 62, 99, 102, 105, 143, 256, 259, 265, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 465, 466, 467, 468, 469, 470, 472, 473, 483, 495, 496, 497, 498, 499, 501, 503, 504, 505, 506, 507, 509, 523, 524, 525, 526, 527, 529, 530, 532, 533, 534, 535, 537, 554, 617, 618, 619, 620, 621, 622, 623, 624, 625, 626, 627, 628, 629, 630, 631, 632, 634, 635, 636, 637, 638, 658, 659, 661, 662, 663, 664, 665, 666], "excluded_lines": []}, "test/test_algos.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 48, 54, 55, 57, 58, 60, 62, 63, 64, 65, 66, 67, 70], "summary": {"covered_lines": 28, "num_statements": 29, "percent_covered": 96.55172413793103, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [71], "excluded_lines": []}, "test/test_algos_treenode.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 25, 26, 27, 28, 29, 30, 31, 32, 34, 48, 54, 55, 58, 59, 61, 63, 64, 65, 66, 67, 68, 70], "summary": {"covered_lines": 28, "num_statements": 29, "percent_covered": 96.55172413793103, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [71], "excluded_lines": []}, "test/test_flat_forest.py": {"executed_lines": [1, 3, 5, 6, 7, 15, 17, 18, 19, 20, 22, 23, 24, 33, 35, 36, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 53, 55, 58, 59, 60, 63, 64, 65, 68, 69, 70, 72, 73, 74, 76, 77, 79, 80, 81, 83, 84, 85, 88], "summary": {"covered_lines": 51, "num_statements": 52, "percent_covered": 98.07692307692308, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [89], "excluded_lines": []}, "test/test_flat_forest_additional.py": {"executed_lines": [1, 2, 3, 5, 6, 9, 10, 11, 12, 14, 16, 18, 20, 21, 22, 23, 26, 27, 28, 30, 31, 32, 33, 36, 38, 39, 42, 44, 46, 47, 50, 51, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 76, 77, 80], "summary": {"covered_lines": 49, "num_statements": 50, "percent_covered": 98.0, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [81], "excluded_lines": []}, "test/test_flat_forest_nb.py": {"executed_lines": [1, 3, 4, 7, 8, 21, 35, 37, 39, 45, 46, 49, 52, 54, 55, 56, 64, 66, 67, 68, 71, 73, 74, 75, 78, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 100, 101, 102, 104, 105, 106, 109, 110, 123, 137, 138, 139, 141, 142, 143, 145, 146, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 191], "summary": {"covered_lines": 93, "num_statements": 94, "percent_covered": 98.93617021276596, "percent_covered_display": "99", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [192], "excluded_lines": []}, "test/test_flat_forest_node.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 55, 56, 57, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 72], "summary": {"covered_lines": 50, "num_statements": 51, "percent_covered": 98.03921568627452, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [73], "excluded_lines": []}, "test/test_flat_forest_node_api.py": {"executed_lines": [1, 3, 4, 7, 8, 9, 10, 12, 14, 15, 16, 19, 20, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 36, 37, 38, 41, 42, 43, 44, 48, 50, 51, 52, 53, 56, 57, 58, 61, 64, 65, 66, 67, 69, 71, 74, 75, 77, 78, 80, 81, 83, 85, 86, 87, 90, 91, 94], "summary": {"covered_lines": 59, "num_statements": 60, "percent_covered": 98.33333333333333, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [95], "excluded_lines": []}, "test/test_flat_forest_node_eq.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 64, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88], "summary": {"covered_lines": 18, "num_statements": 18, "percent_covered": 100.0, "percent_covered_display": "100", "missing_lines": 0, "excluded_lines": 0}, "missing_lines": [], "excluded_lines": []}, "test/test_flat_forest_node_hash.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 15, 18, 19, 20, 23, 26, 27, 28, 31, 33, 34, 36, 38, 41, 43, 44, 47, 49, 51, 54, 56, 58, 60, 62, 69], "summary": {"covered_lines": 36, "num_statements": 37, "percent_covered": 97.29729729729729, "percent_covered_display": "97", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [70], "excluded_lines": []}, "test/test_flat_forest_node_utils.py": {"executed_lines": [1, 3, 4, 5, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 58, 59, 60, 61, 77, 78, 79, 85, 101, 102, 103, 108, 113, 114, 115, 116, 118, 119, 120, 121, 123, 124, 129, 130, 131, 133, 134, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 156, 157, 158, 160, 161, 163, 164, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 199, 200, 201, 203, 204, 205, 210, 226, 227, 228, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 249], "summary": {"covered_lines": 114, "num_statements": 115, "percent_covered": 99.1304347826087, "percent_covered_display": "99", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [250], "excluded_lines": []}, "test/test_misc.py": {"executed_lines": [1, 2, 3, 5, 6, 8, 11, 12, 22, 23, 26, 29, 32, 36, 37, 38, 39, 41, 42, 44, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 61, 63, 64, 65, 68, 69, 72, 73, 74, 77], "summary": {"covered_lines": 41, "num_statements": 42, "percent_covered": 97.61904761904762, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [78], "excluded_lines": []}, "test/test_node_hash.py": {"executed_lines": [1, 2, 3, 4, 5, 7, 8, 26, 27, 28, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 42, 45, 46, 47, 50, 53, 54, 55, 58, 60, 61, 63, 65, 68, 70, 71, 74, 76, 78, 81, 83, 85, 87, 89, 90, 91, 93], "summary": {"covered_lines": 47, "num_statements": 48, "percent_covered": 97.91666666666667, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [94], "excluded_lines": []}, "test/test_tree_converter.py": {"executed_lines": [1, 3, 5, 6, 7, 10, 11, 32, 33, 36, 39, 43, 46, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 86, 120, 132, 134, 136, 138, 139, 140, 141, 142, 143, 145, 147, 150, 151, 152, 154, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215], "summary": {"covered_lines": 111, "num_statements": 139, "percent_covered": 79.85611510791367, "percent_covered_display": "80", "missing_lines": 28, "excluded_lines": 0}, "missing_lines": [87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 216], "excluded_lines": []}, "test/test_tree_hasher.py": {"executed_lines": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 16, 18, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 38, 39, 40, 43, 44, 45, 48, 50, 52, 54, 55, 57, 59, 61, 64, 66, 68, 71, 72, 73, 74, 75, 77, 79, 81, 83, 85, 87, 88, 90, 92, 93, 95], "summary": {"covered_lines": 61, "num_statements": 62, "percent_covered": 98.38709677419355, "percent_covered_display": "98", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [96], "excluded_lines": []}, "test/test_tree_print.py": {"executed_lines": [1, 2, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 22, 24, 34, 35, 36, 37, 45, 47, 48, 49, 50, 58, 60], "summary": {"covered_lines": 26, "num_statements": 31, "percent_covered": 83.87096774193549, "percent_covered_display": "84", "missing_lines": 5, "excluded_lines": 0}, "missing_lines": [17, 18, 19, 20, 61], "excluded_lines": []}, "test/test_tree_with_flat_forest_node.py": {"executed_lines": [1, 2, 3, 4, 6, 8, 23, 35, 37, 38, 39, 40, 52, 54, 55, 56, 57, 69, 71, 72, 73, 74, 75, 82, 84], "summary": {"covered_lines": 25, "num_statements": 26, "percent_covered": 96.15384615384616, "percent_covered_display": "96", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [85], "excluded_lines": []}, "test/test_treenode.py": {"executed_lines": [1, 3, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 44], "summary": {"covered_lines": 28, "num_statements": 37, "percent_covered": 75.67567567567568, "percent_covered_display": "76", "missing_lines": 9, "excluded_lines": 0}, "missing_lines": [5, 12, 17, 18, 19, 21, 30, 38, 43], "excluded_lines": []}, "test/test_treenode_utils.py": {"executed_lines": [1, 3, 4, 21, 22, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 76, 77, 78, 84, 100, 101, 102, 107, 111, 112, 113, 114, 116, 117, 118, 119, 121, 122, 127, 128, 130, 131, 132, 133, 134, 136, 139, 140, 145, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 171, 172, 174, 175, 176, 178, 179, 180, 182, 183, 184, 186, 187, 188, 193, 209, 210, 211, 216, 217, 218, 220, 221, 222, 225], "summary": {"covered_lines": 90, "num_statements": 91, "percent_covered": 98.9010989010989, "percent_covered_display": "99", "missing_lines": 1, "excluded_lines": 0}, "missing_lines": [226], "excluded_lines": []}}, "totals": {"covered_lines": 1445, "num_statements": 1833, "percent_covered": 78.83251500272777, "percent_covered_display": "79", "missing_lines": 388, "excluded_lines": 0}}